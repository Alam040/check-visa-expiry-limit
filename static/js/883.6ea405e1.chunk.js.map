{"version":3,"file":"static/js/883.6ea405e1.chunk.js","mappings":"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","sources":["pages/Login.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FaUserAlt } from \"react-icons/fa\";\r\nimport { RiLockPasswordLine } from \"react-icons/ri\";\r\nimport man from \"../components/Image/man.png\";\r\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setLogin } from \"../feature/UserSlice\";\r\nimport userLoginInfo from \"../data/User.json\";\r\nimport secureLocalStorage from \"react-secure-storage\";\r\nimport LoadingPage from \"../components/LoadingPage\";\r\n\r\nconst Login = () => {\r\n  const [selectCheck, setSelectCheck] = useState(true);\r\n  const [user, setUser] = useState({ user: \"admin\", pass: \"admin\" });\r\n  const [loading, setLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n  var redirectPath = location.state?.path || \"/dashboard\";\r\n\r\n  useEffect(() => {\r\n    const chkd = localStorage.getItem(\"sv_login\");\r\n    var myBool = chkd === \"true\";\r\n    if (chkd === null) {\r\n      setSelectCheck(true);\r\n      localStorage.setItem(\"sv_login\", true);\r\n      //console.log(selectCheck);\r\n    } else {\r\n      setSelectCheck(myBool);\r\n    }\r\n\r\n    const data = secureLocalStorage.getItem(\"data\");\r\n\r\n    if (data !== null) {\r\n      userLoginInfo.map((dt) => {\r\n        if (dt.username === data.username && dt.password === data.password) {\r\n          dispatch(setLogin(data));\r\n          navigate(redirectPath, { replace: true });\r\n        }\r\n        return null;\r\n      });\r\n    }\r\n    setLoading(false);\r\n  }, [dispatch, navigate, redirectPath]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    userLoginInfo.map((data) => {\r\n      if (user.user === data.username && user.pass === data.password) {\r\n        if (selectCheck) {\r\n          dispatch(setLogin(data));\r\n          secureLocalStorage.setItem(\"data\", data);\r\n          secureLocalStorage.setItem(\"login\", true);\r\n          navigate(redirectPath, { replace: true });\r\n        } else {\r\n          dispatch(setLogin(data));\r\n          navigate(redirectPath, { replace: true });\r\n        }\r\n      }\r\n      return null;\r\n    });\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {loading ? (\r\n        <LoadingPage />\r\n      ) : (\r\n        <Section>\r\n          <LoginForm onSubmit={handleSubmit}>\r\n            <Title>Login Your Account</Title>\r\n            <UserImage src={man} alt=\"user-profile\" />\r\n            <InputGroup>\r\n              <InputGroupText>\r\n                <FaUserAlt />\r\n              </InputGroupText>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"user\"\r\n                placeholder=\"User Name\"\r\n                value={user.user}\r\n                onChange={(e) =>\r\n                  setUser({ ...user, [e.target.name]: e.target.value })\r\n                }\r\n              />\r\n            </InputGroup>\r\n\r\n            <InputGroup>\r\n              <InputGroupText>\r\n                <RiLockPasswordLine />\r\n              </InputGroupText>\r\n              <Input\r\n                type=\"password\"\r\n                name=\"pass\"\r\n                placeholder=\"Password\"\r\n                value={user.pass}\r\n                onChange={(e) =>\r\n                  setUser({ ...user, [e.target.name]: e.target.value })\r\n                }\r\n              />\r\n            </InputGroup>\r\n            <SubContainer>\r\n              <SaveLogin>\r\n                <Input\r\n                  type=\"checkbox\"\r\n                  defaultChecked={selectCheck === true ? true : false}\r\n                  onChange={() => {\r\n                    localStorage.setItem(\"sv_login\", !selectCheck);\r\n                    setSelectCheck(!selectCheck);\r\n                  }}\r\n                />\r\n                <Text>Remember Password</Text>\r\n              </SaveLogin>\r\n              <Forget to=\"forget\">Forgot Password ?</Forget>\r\n            </SubContainer>\r\n            <ButtonContainer>\r\n              <Button type=\"submit\">Login</Button>\r\n            </ButtonContainer>\r\n          </LoginForm>\r\n        </Section>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\nexport const Section = styled.section({\r\n  width: \"100%\",\r\n  height: \"100vh\",\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n});\r\n\r\nexport const LoginForm = styled.form({\r\n  width: \"350px\",\r\n  height: \"500px\",\r\n  border: \"1px solid #ced4da\",\r\n  borderRadius: \"5px\",\r\n  marginTop: \"20px\",\r\n  padding: \"1rem\",\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  \"@media (max-width: 600px)\": {\r\n    width: \"95%\",\r\n    margin: \"20px auto 0\",\r\n  },\r\n});\r\n\r\nexport const InputGroup = styled.div({\r\n  position: \"relative\",\r\n  display: \"flex\",\r\n  flexWrap: \"nowrap\",\r\n  margin: \"0.3rem\",\r\n  alignItems: \"stretch\",\r\n  width: \"100%\",\r\n});\r\n\r\nexport const InputGroupText = styled.span({\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  padding: \"0.375rem 0.75rem\",\r\n  whiteSpace: \"nowrap\",\r\n  fontSize: \"1rem\",\r\n  lineHeight: 1.5,\r\n  fontWeight: \"400\",\r\n  textAlign: \"center\",\r\n  color: \"#fff\",\r\n  // background: \"#e9ecef\",\r\n  background: \"rgba(55, 66, 250,0.5)\",\r\n  border: \"1px solid rgba(55, 66, 250,0.5)\",\r\n  // border: \"1px solid #ced4da\",\r\n  // borderRadius: \"0.25rem\",\r\n  borderTopRightRadius: 0,\r\n  borderBottomRightRadius: 0,\r\n});\r\n\r\nexport const Input = styled.input({\r\n  padding: \"0.5rem 1rem\",\r\n  border: \"1px solid rgba(55, 66, 250,0.5)\",\r\n  // border: \"1px solid #ced4da\",\r\n  width: \"100%\",\r\n  fontSize: \"1rem\",\r\n  // borderRadius: \"0.25rem\",\r\n  borderTopLeftRadius: 0,\r\n  borderBottomLeftRadius: 0,\r\n  display: \"block\",\r\n  \":focus\": {\r\n    outline: \"none\",\r\n    border: \"1px dashed rgba(55, 66, 250,0.5)\",\r\n    // border: \"1px dashed rgba(3,3,3,0.5)\",\r\n  },\r\n});\r\n\r\nexport const Title = styled.h1({\r\n  fontWeight: 600,\r\n  textAlign: \"center\",\r\n});\r\nexport const Label = styled.label({\r\n  fontSize: \"0.9rem\",\r\n  marginLeft: \"0.3rem\",\r\n});\r\n\r\nexport const InputContainer = styled.div({\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n});\r\n\r\nexport const ButtonContainer = styled.div({\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n  padding: \"1rem\",\r\n});\r\n\r\nexport const Button = styled.button({\r\n  padding: \"0.5rem 3rem\",\r\n  border: \"none\",\r\n  outline: \"none\",\r\n  fontWeight: 600,\r\n  color: \"#fff\",\r\n  fontSize: \"1rem\",\r\n  background: \"rgba(235, 59, 90,1.0)\",\r\n  \"&:hover\": {\r\n    background: \"rgba(255, 71, 87,1.0)\",\r\n  },\r\n});\r\n\r\nexport const UserImage = styled.img({\r\n  width: \"150px\",\r\n  height: \"auto\",\r\n  borderRadius: \"50%\",\r\n  margin: \"2rem auto\",\r\n});\r\n\r\nexport const SaveLogin = styled.div({\r\n  display: \"grid\",\r\n  flexDirection: \"row\",\r\n  flexWrap: \"nowrap\",\r\n  alignItems: \"center\",\r\n  gridTemplateColumns: \"20px auto\",\r\n});\r\n\r\nexport const Text = styled.p({\r\n  fontSize: \".75rem\",\r\n});\r\n\r\nexport const Forget = styled(Link)({\r\n  textDecoration: \"none\",\r\n  fontSize: \".75rem\",\r\n  textAlign: \"right\",\r\n});\r\n\r\nexport const SubContainer = styled.div({\r\n  display: \"grid\",\r\n  flexDirection: \"row\",\r\n  msFlexDirection: \"row\",\r\n  flexWrap: \"nowrap\",\r\n  gridTemplateColumns: \"auto auto\",\r\n  margin: \"0.3rem\",\r\n});\r\n"],"names":["useState","selectCheck","setSelectCheck","user","pass","setUser","loading","setLoading","navigate","useNavigate","location","useLocation","dispatch","useDispatch","redirectPath","state","path","useEffect","chkd","localStorage","getItem","myBool","setItem","data","secureLocalStorage","userLoginInfo","dt","username","password","setLogin","replace","LoadingPage","Section","LoginForm","onSubmit","e","preventDefault","Title","UserImage","src","man","alt","InputGroup","InputGroupText","Input","type","name","placeholder","value","onChange","target","SubContainer","SaveLogin","defaultChecked","Text","Forget","to","ButtonContainer","Button","styled","width","height","display","justifyContent","border","borderRadius","marginTop","padding","flexDirection","margin","position","flexWrap","alignItems","whiteSpace","fontSize","lineHeight","fontWeight","textAlign","color","background","borderTopRightRadius","borderBottomRightRadius","borderTopLeftRadius","borderBottomLeftRadius","outline","Label","marginLeft","InputContainer","gridTemplateColumns","Link","textDecoration","msFlexDirection"],"sourceRoot":""}